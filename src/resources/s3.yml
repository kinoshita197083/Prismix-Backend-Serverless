Resources:
  PrismixImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:custom.bucketName}
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            AllowedOrigins:
              - '*'
            MaxAge: 3000
      LifecycleConfiguration:
        Rules:
          # Default 180-day expiration rule
          - Id: DefaultExpirationRule
            Status: Enabled
            ExpirationInDays: 180
            TagFilters:
              - Key: preserve
                Value: ''
            
          # Permanent preservation rule
          - Id: CustomPreservationRule
            Status: Enabled
            TagFilters:
              - Key: preserve
                Value: permanent
            NoncurrentVersionExpiration:
              NoncurrentDays: 180

  PrismixImageCloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            Headers:
              - Authorization
            QueryString: true
          MaxTTL: 31536000
          MinTTL: 0
          SmoothStreaming: false
          TargetOriginId: PrismixImageBucketOrigin
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName: !GetAtt PrismixImageBucket.RegionalDomainName
            Id: PrismixImageBucketOrigin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${PrismixImageBucketOAI}"
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  PrismixImageBucketOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "OAI for PrismixImageBucket"

  PrismixImageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PrismixImageBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt PrismixImageBucketOAI.S3CanonicalUserId
            Action: 's3:GetObject'
            Resource: !Sub '${PrismixImageBucket.Arn}/*'
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:DeleteObject'
            Resource: !Sub '${PrismixImageBucket.Arn}/*'

  DeliveryBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:service}-${self:provider.stage}-delivery-bucket
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldFiles
            Status: Enabled
            ExpirationInDays: 90  # Automatically delete files after 90 days

  DeliveryBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DeliveryBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt ZipArchiveProcessorRole.Arn
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:DeleteObject
            Resource: 
              - !Join ['', [!GetAtt DeliveryBucket.Arn, '/*']]
