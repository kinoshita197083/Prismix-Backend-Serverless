Resources:
  PrismixImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:custom.bucketName}
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            AllowedOrigins:
              - '*'
            MaxAge: 3000
      LifecycleConfiguration:
        Rules:
          # Default 180-day expiration rule
          - Id: DefaultExpirationRule
            Status: Enabled
            ExpirationInDays: 180
            TagFilters:
              - Key: preserve
                Value: ''
            
          # Permanent preservation rule
          - Id: CustomPreservationRule
            Status: Enabled
            TagFilters:
              - Key: preserve
                Value: permanent
            NoncurrentVersionExpiration:
              NoncurrentDays: 180

  # PrismixImagePublicKey:
  #   Type: AWS::CloudFront::PublicKey
  #   Properties:
  #     PublicKeyConfig:
  #       Name: !Sub ${AWS::StackName}-image-public-key-${self:provider.stage}
  #       EncodedKey: ${self:custom.cloudfrontKeys.image.public}
  #       Comment: !Sub "Image public key for ${AWS::StackName} (${self:provider.stage})"
  #       CallerReference: !Sub "${AWS::StackName}-image-${self:provider.stage}"

  # PrismixImageKeyGroup:
  #   Type: AWS::CloudFront::KeyGroup
  #   Properties:
  #     KeyGroupConfig:
  #       Items:
  #         - !Ref PrismixImagePublicKey
  #       Name: !Sub ${AWS::StackName}-prismix-image-key-group
  #       Comment: "Key group for image viewing signed URLs"

  # Add SSM parameters to store the key pair ID
  # PrismixImageKeyPairIdParameter:
  #   Type: AWS::SSM::Parameter
  #   Properties:
  #     Name: !Sub /${self:service}/${self:provider.stage}/cloudfront/prismix-image-key-pair-id
  #     Type: String
  #     Value: !Ref PrismixImagePublicKey
  #     Description: "CloudFront key pair ID for image viewing signed URLs (${self:provider.stage})"

  PrismixImageCloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        PriceClass: PriceClass_100
        Origins:
          - Id: !Sub ${AWS::StackName}-image-origin
            DomainName: !GetAtt PrismixImageBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${PrismixImageBucketOAI}"
        DefaultCacheBehavior:
          TargetOriginId: !Sub ${AWS::StackName}-image-origin
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          DefaultTTL: 86400
          MinTTL: 0
          MaxTTL: 31536000
          ForwardedValues:
            Cookies:
              Forward: whitelist
              WhitelistedNames:
                - CloudFront-Key-Pair-Id
                - CloudFront-Policy
                - CloudFront-Signature
            QueryString: false
          # TrustedKeyGroups:
          #   - "${self:custom.${self:provider.stage}CloudfrontTrustedKeyGroup.image}"
          # AllowedMethods:
          #   - GET
          #   - HEAD
          #   - OPTIONS
          # CachedMethods:
          #   - GET
          #   - HEAD

  PrismixImageBucketOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "OAI for PrismixImageBucket"

  PrismixImageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PrismixImageBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt PrismixImageBucketOAI.S3CanonicalUserId
            Action: 's3:GetObject'
            Resource: !Sub '${PrismixImageBucket.Arn}/*'
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:DeleteObject'
              - 's3:ListBucket'
            Resource: 
              - !Sub '${PrismixImageBucket.Arn}/*'
              - !Sub '${PrismixImageBucket.Arn}'

  DeliveryBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:service}-${self:provider.stage}-delivery-bucket
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldFiles
            Status: Enabled
            ExpirationInDays: 90  # Automatically delete files after 90 days

  DeliveryBucketOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "OAI for DeliveryBucket"

  DeliveryBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DeliveryBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt DeliveryBucketOAI.S3CanonicalUserId
            Action: 's3:GetObject'
            Resource: !Sub '${DeliveryBucket.Arn}/*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt ZipArchiveProcessorRole.Arn
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:DeleteObject
            Resource: 
              - !Join ['', [!GetAtt DeliveryBucket.Arn, '/*']]

  DeliveryBucketCloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 86400  # 24 hours
          ForwardedValues:
            Cookies:
              Forward: whitelist
              WhitelistedNames:
                - CloudFront-Key-Pair-Id
                - CloudFront-Policy
                - CloudFront-Signature
            Headers:
              - Authorization
              - Origin
              - Access-Control-Request-Headers
              - Access-Control-Request-Method
            QueryString: true
          MaxTTL: 31536000  # 1 year
          MinTTL: 0
          SmoothStreaming: false
          TargetOriginId: DeliveryBucketOrigin
          ViewerProtocolPolicy: redirect-to-https
          TrustedKeyGroups:
            - "${self:custom.${self:provider.stage}CloudfrontTrustedKeyGroup.delivery}"
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName: !GetAtt DeliveryBucket.RegionalDomainName
            Id: DeliveryBucketOrigin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${DeliveryBucketOAI}"
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  # DeliveryPublicKey:
  #   Type: AWS::CloudFront::PublicKey
  #   Properties:
  #     PublicKeyConfig:
  #       Name: !Sub ${AWS::StackName}-delivery-public-key-${self:provider.stage}
  #       EncodedKey: ${self:custom.cloudfrontKeys.delivery.public}
  #       Comment: !Sub "Delivery public key for ${AWS::StackName} (${self:provider.stage})"
  #       CallerReference: !Sub "${AWS::StackName}-delivery-${self:provider.stage}"

  # DeliveryKeyGroup:
  #   Type: AWS::CloudFront::KeyGroup
  #   Properties:
  #     KeyGroupConfig:
  #       Items:
  #         - !Ref DeliveryPublicKey
  #       Name: !Sub ${AWS::StackName}-delivery-key-group
  #       Comment: "Key group for delivery bucket signed URLs"

  # # Add SSM parameters to store the key pair ID
  # DeliveryKeyPairIdParameter:
  #   Type: AWS::SSM::Parameter
  #   Properties:
  #     Name: !Sub /${self:service}/${self:provider.stage}/cloudfront/prismix-delivery-key-pair-id
  #     Type: String
  #     Value: !Ref DeliveryPublicKey
  #     Description: "CloudFront key pair ID for delivery bucket signed URLs (${self:provider.stage})"